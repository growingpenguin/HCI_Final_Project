export default class NodingIntersectionFinder {
    static constructor_(...args: any[]): void;
    static createAllIntersectionsFinder(li: any): NodingIntersectionFinder;
    static isInteriorVertexIntersection(...args: any[]): boolean;
    static createInteriorIntersectionCounter(li: any): NodingIntersectionFinder;
    static createIntersectionCounter(li: any): NodingIntersectionFinder;
    static isEndSegment(segStr: any, index: any): boolean;
    static createAnyIntersectionFinder(li: any): NodingIntersectionFinder;
    static createInteriorIntersectionsFinder(li: any): NodingIntersectionFinder;
    constructor(...args: any[]);
    count(): any;
    getIntersections(): any;
    setFindAllIntersections(findAllIntersections: any): void;
    _findAllIntersections: any;
    setKeepIntersections(keepIntersections: any): void;
    _keepIntersections: any;
    getIntersection(): any;
    processIntersections(e0: any, segIndex0: any, e1: any, segIndex1: any): any;
    _intSegments: any;
    _interiorIntersection: any;
    hasIntersection(): boolean;
    isDone(): boolean;
    setInteriorIntersectionsOnly(isInteriorIntersectionsOnly: any): void;
    _isInteriorIntersectionsOnly: any;
    setCheckEndSegmentsOnly(isCheckEndSegmentsOnly: any): void;
    _isCheckEndSegmentsOnly: any;
    getIntersectionSegments(): any;
    get interfaces_(): (typeof SegmentIntersector)[];
}
import SegmentIntersector from './SegmentIntersector.js';
