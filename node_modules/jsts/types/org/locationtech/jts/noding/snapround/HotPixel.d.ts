declare class HotPixel {
    static constructor_(...args: any[]): void;
    constructor(...args: any[]);
    intersectsScaled(p0: any, p1: any): boolean;
    copyScaled(p: any, pScaled: any): void;
    getSafeEnvelope(): Envelope;
    _safeEnv: Envelope;
    intersectsPixelClosure(p0: any, p1: any): boolean;
    intersectsToleranceSquare(p0: any, p1: any): boolean;
    addSnappedNode(segStr: any, segIndex: any): boolean;
    initCorners(pt: any): void;
    _minx: number;
    _maxx: any;
    _miny: number;
    _maxy: any;
    intersects(p0: any, p1: any): boolean;
    scale(val: any): number;
    getCoordinate(): any;
}
declare namespace HotPixel {
    let _li: any;
    let _pt: any;
    let _originalPt: any;
    let _ptScaled: any;
    let _p0Scaled: Coordinate;
    let _p1Scaled: Coordinate;
    let _scaleFactor: any;
    let _minx: any;
    let _maxx: any;
    let _miny: any;
    let _maxy: any;
    let _corner: any;
    let _safeEnv: any;
    let SAFE_ENV_EXPANSION_FACTOR: number;
}
export default HotPixel;
import Envelope from '../../geom/Envelope.js';
import Coordinate from '../../geom/Coordinate.js';
