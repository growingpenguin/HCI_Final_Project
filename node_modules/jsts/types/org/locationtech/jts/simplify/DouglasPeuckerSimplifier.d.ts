declare class DouglasPeuckerSimplifier {
    static constructor_(...args: any[]): void;
    static simplify(geom: any, distanceTolerance: any): any;
    constructor(...args: any[]);
    setDistanceTolerance(distanceTolerance: any): void;
    _distanceTolerance: any;
    getResultGeometry(): any;
    setEnsureValid(isEnsureValidTopology: any): void;
    _isEnsureValidTopology: any;
}
declare namespace DouglasPeuckerSimplifier {
    export let _inputGeom: any;
    export let _distanceTolerance: any;
    export let _isEnsureValidTopology: boolean;
    export { DPTransformer };
}
export default DouglasPeuckerSimplifier;
declare class DPTransformer extends GeometryTransformer {
    static constructor_(...args: any[]): void;
    createValidArea(rawAreaGeom: any): any;
}
import GeometryTransformer from '../geom/util/GeometryTransformer.js';
