declare class TopologyPreservingSimplifier {
    static constructor_(...args: any[]): void;
    static simplify(geom: any, distanceTolerance: any): any;
    constructor(...args: any[]);
    setDistanceTolerance(distanceTolerance: any): void;
    getResultGeometry(): any;
    _linestringMap: HashMap;
}
declare namespace TopologyPreservingSimplifier {
    export let _inputGeom: any;
    export let _lineSimplifier: TaggedLinesSimplifier;
    export let _linestringMap: any;
    export { LineStringTransformer };
    export { LineStringMapBuilderFilter };
}
export default TopologyPreservingSimplifier;
import HashMap from '../../../../java/util/HashMap.js';
import TaggedLinesSimplifier from './TaggedLinesSimplifier.js';
declare class LineStringTransformer extends GeometryTransformer {
    static constructor_(...args: any[]): void;
}
declare class LineStringMapBuilderFilter {
    static constructor_(...args: any[]): void;
    constructor(...args: any[]);
    filter(geom: any): any;
    get interfaces_(): (typeof GeometryComponentFilter)[];
}
import GeometryTransformer from '../geom/util/GeometryTransformer.js';
import GeometryComponentFilter from '../geom/GeometryComponentFilter.js';
