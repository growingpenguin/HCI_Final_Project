export default class DirectedEdge extends EdgeEnd {
    static depthFactor(currLocation: any, nextLocation: any): 1 | -1 | 0;
    setVisited(isVisited: any): void;
    _isVisited: any;
    setDepth(position: any, depthVal: any): void;
    isInteriorAreaEdge(): boolean;
    setNextMin(nextMin: any): void;
    _nextMin: any;
    setMinEdgeRing(minEdgeRing: any): void;
    _minEdgeRing: any;
    getSym(): any;
    isForward(): any;
    setSym(de: any): void;
    _sym: any;
    setVisitedEdge(isVisited: any): void;
    getNextMin(): any;
    getDepth(position: any): any;
    computeDirectedLabel(): void;
    _label: Label;
    getNext(): any;
    isLineEdge(): any;
    setEdgeRing(edgeRing: any): void;
    _edgeRing: any;
    getMinEdgeRing(): any;
    getDepthDelta(): any;
    setInResult(isInResult: any): void;
    _isInResult: any;
    printEdge(out: any): void;
    setEdgeDepths(position: any, depth: any): void;
    getEdgeRing(): any;
    isInResult(): any;
    setNext(next: any): void;
    _next: any;
    isVisited(): any;
}
import EdgeEnd from './EdgeEnd.js';
import Label from './Label.js';
