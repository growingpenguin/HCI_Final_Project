export default class SegmentIntersector {
    static constructor_(...args: any[]): void;
    static isAdjacentSegments(i1: any, i2: any): boolean;
    constructor(...args: any[]);
    isTrivialIntersection(e0: any, segIndex0: any, e1: any, segIndex1: any): boolean;
    hasProperInteriorIntersection(): boolean;
    isBoundaryPointInternal(li: any, bdyNodes: any): boolean;
    hasProperIntersection(): boolean;
    hasIntersection(): boolean;
    isDone(): boolean;
    isBoundaryPoint(li: any, bdyNodes: any): boolean;
    setBoundaryNodes(bdyNodes0: any, bdyNodes1: any): void;
    _bdyNodes: any;
    addIntersections(e0: any, segIndex0: any, e1: any, segIndex1: any): any;
    _hasIntersection: boolean;
    _properIntersectionPoint: any;
    _hasProper: boolean;
    _isDone: boolean;
    _hasProperInterior: boolean;
    getProperIntersectionPoint(): any;
    setIsDoneIfProperInt(isDoneWhenProperInt: any): void;
    _isDoneWhenProperInt: any;
}
