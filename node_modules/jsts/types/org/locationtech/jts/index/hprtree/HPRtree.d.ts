declare class HPRtree {
    static constructor_(...args: any[]): void;
    static computeLayerIndices(itemSize: any, nodeCapacity: any): any;
    static createBoundsArray(size: any): any;
    static intersects(env1: any, env2: any): boolean;
    static dumpItems(items: any): void;
    static numNodesToCover(nChild: any, nodeCapacity: any): any;
    static toIntArray(list: any): any;
    constructor(...args: any[]);
    computeLeafNodes(layerSize: any): void;
    size(): any;
    insert(itemEnv: any, item: any): void;
    intersects(nodeIndex: any, env: any): boolean;
    getNodeEnvelope(i: any): Envelope;
    sortItems(): void;
    queryNode(layerIndex: any, nodeOffset: any, searchEnv: any, visitor: any): any;
    updateNodeBounds(nodeIndex: any, minX: any, minY: any, maxX: any, maxY: any): void;
    remove(itemEnv: any, item: any): boolean;
    computeNodeBounds(nodeIndex: any, blockStart: any, nodeMaxIndex: any): void;
    queryTopLayer(searchEnv: any, visitor: any): void;
    queryItems(blockStart: any, searchEnv: any, visitor: any): void;
    queryNodeChildren(layerIndex: any, blockOffset: any, searchEnv: any, visitor: any): void;
    computeLayerNodes(layerIndex: any): void;
    layerSize(layerIndex: any): number;
    query(...args: any[]): any;
    build(): any;
    _isBuilt: boolean;
    _layerStartIndex: any;
    _nodeBounds: any;
    computeLeafNodeBounds(nodeIndex: any, blockStart: any): void;
    getBounds(): any;
    get interfaces_(): (typeof SpatialIndex)[];
}
declare namespace HPRtree {
    export let _items: ArrayList;
    export let _nodeCapacity: any;
    export let _totalExtent: Envelope;
    export let _layerStartIndex: any;
    export let _nodeBounds: any;
    export let _isBuilt: boolean;
    export { ItemComparator };
    export let ENV_SIZE: number;
    export let HILBERT_LEVEL: number;
    export let DEFAULT_NODE_CAPACITY: number;
}
export default HPRtree;
import Envelope from '../../geom/Envelope.js';
import SpatialIndex from '../SpatialIndex.js';
import ArrayList from '../../../../../java/util/ArrayList.js';
declare class ItemComparator {
    static constructor_(...args: any[]): void;
    constructor(...args: any[]);
    compare(item1: any, item2: any): 1 | -1 | 0;
    get interfaces_(): (typeof Comparator)[];
}
import Comparator from '../../../../../java/util/Comparator.js';
