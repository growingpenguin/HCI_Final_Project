declare class KdTree {
    static constructor_(...args: any[]): void;
    static toCoordinates(...args: any[]): any;
    constructor(...args: any[]);
    insert(...args: any[]): any;
    _root: KdNode;
    query(...args: any[]): ArrayList;
    queryNode(currentNode: any, queryEnv: any, odd: any, visitor: any): any;
    findBestMatchNode(p: any): any;
    isEmpty(): boolean;
    insertExact(p: any, data: any): KdNode;
    _numberOfNodes: any;
}
declare namespace KdTree {
    export let _root: any;
    export let _numberOfNodes: any;
    export let _tolerance: any;
    export { BestMatchVisitor };
}
export default KdTree;
import KdNode from './KdNode.js';
import ArrayList from '../../../../../java/util/ArrayList.js';
declare class BestMatchVisitor {
    static constructor_(...args: any[]): void;
    constructor(...args: any[]);
    queryEnvelope(): Envelope;
    getNode(): any;
    visit(node: any): any;
    _matchNode: any;
    _matchDist: any;
    get interfaces_(): (typeof KdNodeVisitor)[];
}
import Envelope from '../../geom/Envelope.js';
import KdNodeVisitor from './KdNodeVisitor.js';
