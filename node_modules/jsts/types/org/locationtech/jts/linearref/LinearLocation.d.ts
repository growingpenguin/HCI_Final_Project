export default class LinearLocation {
    static constructor_(...args: any[]): void;
    static numSegments(line: any): number;
    static compareLocationValues(componentIndex0: any, segmentIndex0: any, segmentFraction0: any, componentIndex1: any, segmentIndex1: any, segmentFraction1: any): 1 | -1 | 0;
    static pointAlongSegmentByFraction(p0: any, p1: any, frac: any): any;
    static getEndLocation(linear: any): LinearLocation;
    constructor(...args: any[]);
    getSegmentIndex(): number;
    getComponentIndex(): number;
    getSegmentFraction(): number;
    setToEnd(linear: any): void;
    _componentIndex: number;
    _segmentIndex: number;
    _segmentFraction: number;
    compareTo(o: any): 1 | -1 | 0;
    copy(): LinearLocation;
    toString(): string;
    compareLocationValues(componentIndex1: any, segmentIndex1: any, segmentFraction1: any): 1 | -1 | 0;
    getSegmentLength(linearGeom: any): any;
    isVertex(): boolean;
    isEndpoint(linearGeom: any): boolean;
    isValid(linearGeom: any): boolean;
    normalize(): void;
    toLowest(linearGeom: any): LinearLocation;
    getCoordinate(linearGeom: any): any;
    getSegment(linearGeom: any): LineSegment;
    clamp(linear: any): any;
    isOnSameSegment(loc: any): boolean;
    snapToVertex(linearGeom: any, minDistance: any): any;
    get interfaces_(): (typeof Comparable)[];
}
import LineSegment from '../geom/LineSegment.js';
import Comparable from '../../../../java/lang/Comparable.js';
