declare class IndexedPointInAreaLocator {
    static constructor_(...args: any[]): void;
    constructor(...args: any[]);
    locate(p: any): number;
    _index: IntervalIndexedGeometry;
    _geom: any;
    get interfaces_(): (typeof PointOnGeometryLocator)[];
}
declare namespace IndexedPointInAreaLocator {
    export let _geom: any;
    export let _index: any;
    export { SegmentVisitor };
    export { IntervalIndexedGeometry };
}
export default IndexedPointInAreaLocator;
declare class IntervalIndexedGeometry {
    static constructor_(...args: any[]): void;
    constructor(...args: any[]);
    init(geom: any): void;
    addLine(pts: any): void;
    query(...args: any[]): any;
}
import PointOnGeometryLocator from './PointOnGeometryLocator.js';
declare class SegmentVisitor {
    static constructor_(...args: any[]): void;
    constructor(...args: any[]);
    visitItem(item: any): void;
    get interfaces_(): (typeof ItemVisitor)[];
}
import ItemVisitor from '../../index/ItemVisitor.js';
