export default class Triangle {
    static constructor_(...args: any[]): void;
    static isAcute(a: any, b: any, c: any): boolean;
    static circumcentre(a: any, b: any, c: any): Coordinate;
    static perpendicularBisector(a: any, b: any): HCoordinate;
    static angleBisector(a: any, b: any, c: any): Coordinate;
    static inCentre(a: any, b: any, c: any): Coordinate;
    static area(a: any, b: any, c: any): number;
    static signedArea(a: any, b: any, c: any): number;
    static det(m00: any, m01: any, m10: any, m11: any): number;
    static interpolateZ(p: any, v0: any, v1: any, v2: any): any;
    static longestSideLength(a: any, b: any, c: any): any;
    static circumcentreDD(a: any, b: any, c: any): Coordinate;
    static area3D(a: any, b: any, c: any): number;
    static centroid(a: any, b: any, c: any): Coordinate;
    constructor(...args: any[]);
    interpolateZ(p: any): any;
    longestSideLength(): any;
    isAcute(): boolean;
    circumcentre(): Coordinate;
    inCentre(): Coordinate;
    area(): number;
    signedArea(): number;
    area3D(): number;
    centroid(): Coordinate;
}
import Coordinate from './Coordinate.js';
import HCoordinate from '../algorithm/HCoordinate.js';
