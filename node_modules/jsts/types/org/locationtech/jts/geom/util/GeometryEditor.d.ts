declare class GeometryEditor {
    static constructor_(...args: any[]): void;
    constructor(...args: any[]);
    setCopyUserData(isUserDataCopied: any): void;
    _isUserDataCopied: any;
    edit(geometry: any, operation: any): any;
    editInternal(geometry: any, operation: any): any;
    _factory: any;
    editGeometryCollection(collection: any, operation: any): any;
    editPolygon(polygon: any, operation: any): any;
}
declare namespace GeometryEditor {
    export let _factory: any;
    export let _isUserDataCopied: boolean;
    export { GeometryEditorOperation };
    export { NoOpGeometryOperation };
    export { CoordinateOperation };
    export { CoordinateSequenceOperation };
}
export default GeometryEditor;
declare function GeometryEditorOperation(): void;
declare class NoOpGeometryOperation {
    edit(geometry: any, factory: any): any;
    get interfaces_(): (typeof GeometryEditorOperation)[];
}
declare class CoordinateOperation {
    edit(geometry: any, factory: any): any;
    get interfaces_(): (typeof GeometryEditorOperation)[];
}
declare class CoordinateSequenceOperation {
    edit(geometry: any, factory: any): any;
    get interfaces_(): (typeof GeometryEditorOperation)[];
}
