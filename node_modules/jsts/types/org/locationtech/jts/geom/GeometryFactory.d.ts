export default class GeometryFactory {
    static constructor_(...args: any[]): void;
    static toMultiPolygonArray(multiPolygons: any): any;
    static toGeometryArray(geometries: any): any;
    static getDefaultCoordinateSequenceFactory(): CoordinateArraySequenceFactory;
    static toMultiLineStringArray(multiLineStrings: any): any;
    static toLineStringArray(lineStrings: any): any;
    static toMultiPointArray(multiPoints: any): any;
    static toLinearRingArray(linearRings: any): any;
    static toPointArray(points: any): any;
    static toPolygonArray(polygons: any): any;
    static createPointFromInternalCoord(coord: any, exemplar: any): any;
    constructor(...args: any[]);
    createEmpty(dimension: any): any;
    toGeometry(envelope: any): any;
    createLineString(...args: any[]): any;
    createMultiLineString(...args: any[]): MultiLineString;
    createPolygon(...args: any[]): any;
    getSRID(): any;
    createGeometryCollection(...args: any[]): GeometryCollection;
    getPrecisionModel(): any;
    createLinearRing(...args: any[]): any;
    createMultiPolygon(...args: any[]): MultiPolygon;
    createMultiPoint(...args: any[]): any;
    buildGeometry(geomList: any): any;
    createMultiPointFromCoords(coordinates: any): any;
    createPoint(...args: any[]): any;
    getCoordinateSequenceFactory(): any;
    get interfaces_(): (typeof Serializable)[];
}
import MultiLineString from './MultiLineString.js';
import GeometryCollection from './GeometryCollection.js';
import MultiPolygon from './MultiPolygon.js';
import Serializable from '../../../../java/io/Serializable.js';
import CoordinateArraySequenceFactory from './impl/CoordinateArraySequenceFactory.js';
