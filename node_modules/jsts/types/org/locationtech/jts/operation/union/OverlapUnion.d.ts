export default class OverlapUnion {
    static constructor_(...args: any[]): void;
    static containsProperly(...args: any[]): any;
    static union(g0: any, g1: any): any;
    static intersects(env: any, p0: any, p1: any): any;
    static overlapEnvelope(g0: any, g1: any): any;
    static extractBorderSegments(geom: any, env: any, segs: any): void;
    static unionBuffer(g0: any, g1: any): any;
    constructor(...args: any[]);
    isBorderSegmentsSame(result: any, env: any): boolean;
    union(): any;
    _isUnionSafe: boolean;
    extractBorderSegments(geom0: any, geom1: any, env: any): ArrayList;
    isUnionOptimized(): boolean;
    extractByEnvelope(env: any, geom: any, disjointGeoms: any): any;
    isEqual(segs0: any, segs1: any): boolean;
    combine(unionGeom: any, disjointPolys: any): any;
    unionFull(geom0: any, geom1: any): any;
}
import ArrayList from '../../../../../java/util/ArrayList.js';
