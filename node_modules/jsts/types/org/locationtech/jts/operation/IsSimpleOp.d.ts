declare class IsSimpleOp {
    static constructor_(...args: any[]): void;
    static isSimple(...args: any[]): boolean;
    constructor(...args: any[]);
    isSimpleMultiPoint(mp: any): boolean;
    _nonSimpleLocation: any;
    isSimplePolygonal(geom: any): boolean;
    hasClosedEndpointIntersection(graph: any): boolean;
    getNonSimpleLocation(): any;
    isSimpleLinearGeometry(geom: any): boolean;
    hasNonEndpointIntersection(graph: any): boolean;
    addEndpoint(endPoints: any, p: any, isClosed: any): void;
    computeSimple(geom: any): boolean;
    isSimple(): boolean;
    isSimpleGeometryCollection(geom: any): boolean;
}
declare namespace IsSimpleOp {
    export let _inputGeom: any;
    export let _isClosedEndpointsInInterior: boolean;
    export let _nonSimpleLocation: any;
    export { EndpointInfo };
}
export default IsSimpleOp;
declare class EndpointInfo {
    static constructor_(...args: any[]): void;
    constructor(...args: any[]);
    getCoordinate(): any;
    addEndpoint(isClosed: any): void;
}
