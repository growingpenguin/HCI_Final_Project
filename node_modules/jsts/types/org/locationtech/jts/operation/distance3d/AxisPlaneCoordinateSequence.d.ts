declare class AxisPlaneCoordinateSequence {
    static constructor_(...args: any[]): void;
    static projectToXZ(seq: any): AxisPlaneCoordinateSequence;
    static projectToYZ(seq: any): AxisPlaneCoordinateSequence;
    static projectToXY(seq: any): AxisPlaneCoordinateSequence;
    constructor(...args: any[]);
    setOrdinate(index: any, ordinateIndex: any, value: any): void;
    getCoordinate(...args: any[]): Coordinate;
    getCoordinateCopy(i: any): Coordinate;
    createCoordinate(): any;
    getDimension(): number;
    getX(index: any): any;
    clone(): void;
    expandEnvelope(env: any): void;
    copy(): void;
    getY(index: any): any;
    toCoordinateArray(): void;
    getZ(index: any): any;
    size(): any;
    getOrdinate(index: any, ordinateIndex: any): any;
    get interfaces_(): (typeof CoordinateSequence)[];
}
declare namespace AxisPlaneCoordinateSequence {
    let _seq: any;
    let _indexMap: any;
    let XY_INDEX: number[];
    let XZ_INDEX: number[];
    let YZ_INDEX: number[];
}
export default AxisPlaneCoordinateSequence;
import Coordinate from '../../geom/Coordinate.js';
import CoordinateSequence from '../../geom/CoordinateSequence.js';
