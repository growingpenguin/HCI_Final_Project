declare class GeometrySnapper {
    static constructor_(...args: any[]): void;
    static computeSizeBasedSnapTolerance(g: any): number;
    static computeOverlaySnapTolerance(...args: any[]): any;
    static snapToSelf(geom: any, snapTolerance: any, cleanResult: any): any;
    static snap(g0: any, g1: any, snapTolerance: any): any;
    constructor(...args: any[]);
    computeSnapTolerance(ringPts: any): number;
    snapTo(snapGeom: any, snapTolerance: any): any;
    snapToSelf(snapTolerance: any, cleanResult: any): any;
    extractTargetCoordinates(g: any): any[];
    computeMinimumSegmentLength(pts: any): number;
}
declare namespace GeometrySnapper {
    let _srcGeom: any;
    let SNAP_PRECISION_FACTOR: number;
}
export default GeometrySnapper;
