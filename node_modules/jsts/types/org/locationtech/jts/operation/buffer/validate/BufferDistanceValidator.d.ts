declare class BufferDistanceValidator {
    static constructor_(...args: any[]): void;
    constructor(...args: any[]);
    checkMaximumDistance(input: any, bufCurve: any, maxDist: any): void;
    _maxDistanceFound: any;
    _isValid: boolean;
    _errorLocation: any;
    _errorIndicator: any;
    _errMsg: string;
    isValid(): boolean;
    _minValidDistance: number;
    _maxValidDistance: number;
    checkNegativeValid(): any;
    getErrorIndicator(): any;
    checkMinimumDistance(g1: any, g2: any, minDist: any): void;
    _minDistanceFound: any;
    getPolygonLines(g: any): any;
    getErrorMessage(): string;
    checkPositiveValid(): any;
    getErrorLocation(): any;
}
declare namespace BufferDistanceValidator {
    let _input: any;
    let _bufDistance: any;
    let _result: any;
    let _minValidDistance: any;
    let _maxValidDistance: any;
    let _minDistanceFound: any;
    let _maxDistanceFound: any;
    let _isValid: boolean;
    let _errMsg: any;
    let _errorLocation: any;
    let _errorIndicator: any;
    let VERBOSE: boolean;
    let MAX_DISTANCE_DIFF_FRAC: number;
}
export default BufferDistanceValidator;
