declare class OffsetSegmentGenerator {
    static constructor_(...args: any[]): void;
    constructor(...args: any[]);
    getCoordinates(): any;
    addMitreJoin(p: any, offset0: any, offset1: any, distance: any): any;
    addLastSegment(): void;
    initSideSegments(s1: any, s2: any, side: any): void;
    _s1: any;
    _s2: any;
    _side: any;
    addLimitedMitreJoin(offset0: any, offset1: any, distance: any, mitreLimit: any): void;
    addDirectedFillet(p: any, startAngle: any, endAngle: any, direction: any, radius: any): any;
    computeOffsetSegment(seg: any, side: any, distance: any, offset: any): void;
    addInsideTurn(orientation: any, addStartPoint: any): void;
    _hasNarrowConcaveAngle: boolean;
    createCircle(p: any): void;
    addBevelJoin(offset0: any, offset1: any): void;
    init(distance: any): void;
    _distance: any;
    _maxCurveSegmentError: number;
    _segList: OffsetSegmentString;
    addCollinear(addStartPoint: any): void;
    addNextSegment(p: any, addStartPoint: any): any;
    _s0: any;
    addLineEndCap(p0: any, p1: any): void;
    addOutsideTurn(orientation: any, addStartPoint: any): any;
    createSquare(p: any): void;
    addSegments(pt: any, isForward: any): void;
    addFirstSegment(): void;
    addCornerFillet(p: any, p0: any, p1: any, direction: any, radius: any): void;
    closeRing(): void;
    hasNarrowConcaveAngle(): boolean;
}
declare namespace OffsetSegmentGenerator {
    let _maxCurveSegmentError: number;
    let _filletAngleQuantum: number;
    let _closingSegLengthFactor: number;
    let _segList: any;
    let _distance: number;
    let _precisionModel: any;
    let _bufParams: any;
    let _li: RobustLineIntersector;
    let _s0: any;
    let _s1: any;
    let _s2: any;
    let _seg0: LineSegment;
    let _seg1: LineSegment;
    let _offset0: LineSegment;
    let _offset1: LineSegment;
    let _side: number;
    let _hasNarrowConcaveAngle: boolean;
    let OFFSET_SEGMENT_SEPARATION_FACTOR: number;
    let INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR: number;
    let CURVE_VERTEX_SNAP_DISTANCE_FACTOR: number;
    let MAX_CLOSING_SEG_LEN_FACTOR: number;
}
export default OffsetSegmentGenerator;
import OffsetSegmentString from './OffsetSegmentString.js';
import RobustLineIntersector from '../../algorithm/RobustLineIntersector.js';
import LineSegment from '../../geom/LineSegment.js';
