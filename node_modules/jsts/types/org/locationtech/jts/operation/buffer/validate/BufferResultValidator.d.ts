declare class BufferResultValidator {
    static constructor_(...args: any[]): void;
    static isValid(g: any, distance: any, result: any): boolean;
    static isValidMsg(g: any, distance: any, result: any): string;
    constructor(...args: any[]);
    checkDistance(): void;
    _isValid: boolean;
    _errorMsg: string;
    _errorLocation: any;
    _errorIndicator: any;
    checkArea(): void;
    checkPolygonal(): void;
    getErrorIndicator(): any;
    report(checkName: any): any;
    getErrorMessage(): string;
    isValid(): boolean;
    checkEnvelope(): any;
    getErrorLocation(): any;
    checkExpectedEmpty(): any;
}
declare namespace BufferResultValidator {
    let _input: any;
    let _distance: any;
    let _result: any;
    let _isValid: boolean;
    let _errorMsg: any;
    let _errorLocation: any;
    let _errorIndicator: any;
    let VERBOSE: boolean;
    let MAX_ENV_DIFF_FRAC: number;
}
export default BufferResultValidator;
