export default class LineSequencer {
    static constructor_(): void;
    static findUnvisitedBestOrientedDE(node: any): any;
    static findLowestDegreeNode(graph: any): any;
    static isSequenced(geom: any): boolean;
    static reverse(line: any): any;
    static sequence(geom: any): any;
    constructor(...args: any[]);
    computeSequence(): any;
    _isRun: boolean;
    _sequencedGeometry: any;
    _isSequenceable: boolean;
    findSequences(): ArrayList;
    addReverseSubpath(de: any, lit: any, expectedClosed: any): void;
    findSequence(graph: any): any;
    reverse(seq: any): LinkedList;
    add(...args: any[]): void;
    addLine(lineString: any): void;
    _factory: any;
    hasSequence(graph: any): boolean;
    orient(seq: any): any;
    buildSequencedGeometry(sequences: any): any;
    getSequencedLineStrings(): any;
    isSequenceable(): boolean;
}
import ArrayList from '../../../../../java/util/ArrayList.js';
import LinkedList from '../../../../../java/util/LinkedList.js';
