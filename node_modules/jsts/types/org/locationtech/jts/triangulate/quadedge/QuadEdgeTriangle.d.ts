declare class QuadEdgeTriangle {
    static constructor_(...args: any[]): void;
    static contains(...args: any[]): boolean;
    static toPolygon(...args: any[]): any;
    static createOn(subdiv: any): any;
    static nextIndex(index: any): number;
    constructor(...args: any[]);
    getCoordinates(): any;
    getVertex(i: any): any;
    getCoordinate(i: any): any;
    getTrianglesAdjacentToVertex(vertexIndex: any): ArrayList;
    getNeighbours(): any;
    getAdjacentTriangleAcrossEdge(edgeIndex: any): any;
    setData(data: any): void;
    _data: any;
    getEdge(i: any): any;
    toString(): any;
    isLive(): boolean;
    getEdgeSegment(i: any, seg: any): void;
    isBorder(...args: any[]): boolean;
    getEdgeIndex(...args: any[]): number;
    getGeometry(fact: any): any;
    getData(): any;
    getAdjacentTriangleEdgeIndex(i: any): any;
    getVertices(): any;
    getEdges(): any;
    kill(): void;
    _edge: any;
    contains(pt: any): boolean;
}
declare namespace QuadEdgeTriangle {
    export let _edge: any;
    export let _data: any;
    export { QuadEdgeTriangleBuilderVisitor };
}
export default QuadEdgeTriangle;
import ArrayList from '../../../../../java/util/ArrayList.js';
declare class QuadEdgeTriangleBuilderVisitor {
    static constructor_(): void;
    constructor(...args: any[]);
    visit(edges: any): void;
    getTriangles(): any;
    get interfaces_(): (typeof TriangleVisitor)[];
}
import TriangleVisitor from './TriangleVisitor.js';
